name: Lambda CI/CD

on:
  push:
    branches:
      - main

jobs:
  lambda-ci:
    name: Test & Deploy Lambda
    runs-on: ubuntu-latest

    steps:
      # 1. Clonar el repositorio
      - name: Checkout repo
        uses: actions/checkout@v3

      # 2. Configurar Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      # 3. Instalar dependencias (Python)
      - name: Install Python dependencies
        run: |
          cd backend/lambdafn
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements-dev.txt

      # 4. Ejecutar pruebas y cobertura
      - name: Run tests with coverage
        run: |
          cd backend/lambdafn
          source venv/bin/activate
          PYTHONPATH=. coverage run -m pytest tests
          coverage report -m
          coverage xml

      # 5. Subir reporte de cobertura como artefacto
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: backend/lambdafn/coverage.xml

      # 6. Instalar Serverless Framework
      - name: Install Serverless CLI
        run: npm install -g serverless

      # 7. Validar configuración de Serverless
      - name: Validate Serverless configuration
        run: |
          cd backend
          serverless config credentials --provider aws --key ${{ secrets.AWS_ACCESS_KEY_ID }} --secret ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          serverless print --stage dev

      # 8. Desplegar con Serverless
      - name: Deploy Lambda to AWS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd backend
          serverless deploy --stage dev

      # 9. Manejar éxito o fallo
      - name: Deployment successful
        if: success()
        run: echo "Lambda deployment successful"

      - name: Deployment failed
        if: failure()
        run: |
          echo "Deployment failed. You can rollback manually with:"
          echo "serverless rollback --timestamp <timestamp>"